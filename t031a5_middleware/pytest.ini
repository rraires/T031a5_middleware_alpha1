[tool:pytest]
# pytest configuration file

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --junitxml=test_results/junit.xml
    --html=test_results/report.html
    --self-contained-html

# Minimum version
minversion = 6.0

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    fast: Fast running tests
    audio: Audio module tests
    motion: Motion module tests
    led: LED module tests
    video: Video module tests
    sensor: Sensor fusion tests
    api: API tests
    core: Core functionality tests
    simulation: Tests that use simulation mode
    hardware: Tests that require actual hardware
    network: Tests that require network connectivity
    database: Tests that require database
    performance: Performance tests
    security: Security tests
    regression: Regression tests
    smoke: Smoke tests
    critical: Critical functionality tests
    optional: Optional feature tests

# Filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*coroutine.*:RuntimeWarning
    ignore:.*asyncio.*:DeprecationWarning

# Test timeout (in seconds)
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = test_results/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Asyncio
asyncio_mode = auto

# Collection
collect_ignore = [
    "setup.py",
    "build",
    "dist",
    "venv",
    "env",
    ".venv",
    ".env",
    "node_modules"
]

# Cache
cache_dir = .pytest_cache

# Doctest
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS

# xfail
xfail_strict = true

# Required plugins
required_plugins =
    pytest-cov>=4.0.0
    pytest-html>=3.1.0
    pytest-xdist>=3.0.0
    pytest-mock>=3.10.0
    pytest-asyncio>=0.21.0
    pytest-timeout>=2.1.0

# Parallel execution
# Uncomment to enable parallel test execution
# -n auto
# --dist worksteal

# Environment variables for tests
env =
    TESTING = 1
    LOG_LEVEL = DEBUG
    SIMULATION_MODE = 1
    DISABLE_HARDWARE = 1
    TEST_DATA_DIR = ./tests/data
    TEMP_DIR = ./temp/test
    CONFIG_FILE = ./tests/test_config.json