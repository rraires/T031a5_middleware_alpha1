# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/
*.iml
*.ipr
*.iws

# Visual Studio Code
.vscode/

# Project specific
# Logs
logs/
*.log

# Data files
data/
temp/
recordings/
videos/
gestures/

# Configuration files with sensitive data
.env
.env.local
.env.production
config.local.json
config.production.json

# SSL certificates
ssl/
*.pem
*.key
*.crt
*.p12

# Database files
*.db
*.sqlite
*.sqlite3

# Process IDs
*.pid

# Docker
.dockerignore

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk
Desktop.ini

# Linux
*~

# Backup files
*.bak
*.backup
*.old
*.orig
*.swp
*.swo
*~

# Temporary files
*.tmp
*.temp

# Audio/Video files (if not needed in repo)
*.wav
*.mp3
*.mp4
*.avi
*.mov
*.flv

# Model files (if large)
*.model
*.pkl
*.joblib
*.h5
*.pb

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# pytest
.pytest_cache/

# Coverage reports
htmlcov/
.coverage
.coverage.*

# Profiling data
*.prof

# Local development
local_config.json
dev_config.json

# IDE specific
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Package manager
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Redis dump
dump.rdb

# Prometheus data
prometheus_data/

# Grafana data
grafana_data/

# Docker volumes
volumes/

# Generated documentation
docs/build/
docs/_build/

# Monitoring and metrics
metrics.json
health_check.json

# Hardware specific
/dev/
/sys/
/proc/

# Simulation data
simulation_data/

# Cache directories
.cache/
cache/

# Lock files
*.lock
Pipfile.lock
poetry.lock

# Runtime files
runtime/
pids/

# Backup configurations
config.backup.*

# Test artifacts
test_results/
test_reports/

# Performance profiling
profile_results/

# Machine learning artifacts
models/
checkpoints/
tensorboard_logs/

# Audio processing cache
audio_cache/

# Video processing cache
video_cache/

# Sensor calibration data
calibration_data/

# Motion planning cache
motion_cache/

# LED pattern cache
led_cache/

# Temporary downloads
downloads/

# System monitoring
system_stats/

# Error dumps
core.*
*.dmp

# Network captures
*.pcap
*.pcapng

# Security keys
*.key
*.pem
*.p12
*.jks

# API documentation
api_docs/

# Generated schemas
schemas/

# Build artifacts
build_artifacts/

# Deployment artifacts
deployment/

# Local overrides
local/
overrides/